Simplified Bitcoin-like System
We are building a simplified Bitcoin-like system. In this system, we have miners who solve puzzles to validate transactions and add new blocks to the blockchain. The blockchain is a chain of blocks that hold transaction data. Once a block is added, it cannot be changed, ensuring the integrity of the system.

Key Components:


Central WebSocket Server

Purpose: Acts as a communication hub where all miners can connect and exchange blocks and transactions.
Function: The server receives messages (blocks or transactions) from miners and broadcasts them to other miners in real time.



Miner Server

Purpose: A miner is a server that:
Creates new blocks: Collects transactions, solves a cryptographic puzzle (proof-of-work), and creates a valid block.
Verifies blocks: Checks if the blocks received from other miners follow the blockchain rules (correct proof-of-work, valid signature, correct balances, etc.).
Adds blocks: Once a block is verified, it is added to the blockchain, and the miner broadcasts the block to the network.
Rejects invalid blocks: If a block is not valid, the miner discards it to keep the blockchain intact.
Catches up: When a miner starts, it asks the central server for the current blockchain to ensure it's up-to-date.



Frontend (Wallet & Transactions)

Purpose: The frontend allows users to:
Create a wallet (a public-private key pair).
Sign transactions (approve and send funds).
Submit transactions to miners for validation and inclusion in blocks.
Wallet: The wallet generates a public key (for the wallet address) and a private key (for signing transactions).
Transaction: A transaction is a transfer of "coins" (BTC-like tokens) from one address to another. The transaction needs to be cryptographically signed by the senderâ€™s private key.
